# G-code Commands
# QUERY_ENDSTOPS: Probe the axis endstops and report if they are "triggered" or in an "open" state. This command is typically used to verify that an endstop is working correctly.
# QUERY_ADC [NAME=<config_name>] [PULLUP=<value>]: Report the last analog value received for a configured analog pin. If NAME is not provided, the list of available adc names are reported. If PULLUP is provided (as a value in Ohms), the raw analog value along with the equivalent resistance given that pullup is reported.
# GET_POSITION: Return information on the current location of the toolhead.
# SET_GCODE_OFFSET [X=<pos>|X_ADJUST=<adjust>] [Y=<pos>|Y_ADJUST=<adjust>] [Z=<pos>|Z_ADJUST=<adjust>] [MOVE=1 [MOVE_SPEED=<speed>]]: Set a positional offset to apply to future G-Code commands. This is commonly used to virtually change the Z bed offset or to set nozzle XY offsets when switching extruders. For example, if "SET_GCODE_OFFSET Z=0.2" is sent, then future G-Code moves will have 0.2mm added to their Z height. If the X_ADJUST style parameters are used, then the adjustment will be added to any existing offset (eg, "SET_GCODE_OFFSET Z=-0.2" followed by "SET_GCODE_OFFSET Z_ADJUST=0.3" would result in a total Z offset of 0.1). If "MOVE=1" is specified then a toolhead move will be issued to apply the given offset (otherwise the offset will take effect on the next absolute G-Code move that specifies the given axis). If "MOVE_SPEED" is specified then the toolhead move will be performed with the given speed (in mm/s); otherwise the toolhead move will use the last specified G-Code speed.
# SAVE_GCODE_STATE [NAME=<state_name>]: Save the current g-code coordinate parsing state. Saving and restoring the g-code state is useful in scripts and macros. This command saves the current g-code absolute coordinate mode (G90/G91), absolute extrude mode (M82/M83), origin (G92), offset (SET_GCODE_OFFSET), speed override (M220), extruder override (M221), move speed, current XYZ position, and relative extruder "E" position. If NAME is provided it allows one to name the saved state to the given string. If NAME is not provided it defaults to "default".
# RESTORE_GCODE_STATE [NAME=<state_name>] [MOVE=1 [MOVE_SPEED=<speed>]]: Restore a state previously saved via SAVE_GCODE_STATE. If "MOVE=1" is specified then a toolhead move will be issued to move back to the previous XYZ position. If "MOVE_SPEED" is specified then the toolhead move will be performed with the given speed (in mm/s); otherwise the toolhead move will use the restored g-code speed.
# PID_CALIBRATE HEATER=<config_name> TARGET=<temperature> [WRITE_FILE=1]: Perform a PID calibration test. The specified heater will be enabled until the specified target temperature is reached, and then the heater will be turned off and on for several cycles. If the WRITE_FILE parameter is enabled, then the file /tmp/heattest.txt will be created with a log of all temperature samples taken during the test.
# TURN_OFF_HEATERS: Turn off all heaters.
# TEMPERATURE_WAIT SENSOR=<config_name> [MINIMUM=<target>] [MAXIMUM=<target>]: Wait until the given temperature sensor is at or above the supplied MINIMUM and/or at or below the supplied MAXIMUM.
# SET_VELOCITY_LIMIT [VELOCITY=<value>] [ACCEL=<value>] [ACCEL_TO_DECEL=<value>] [SQUARE_CORNER_VELOCITY=<value>]: Modify the printer's velocity limits. Note that one may only set values less than or equal to the limits specified in the config file.
# SET_HEATER_TEMPERATURE HEATER=<heater_name> [TARGET=<target_temperature>]: Sets the target temperature for a heater. If a target temperature is not supplied, the target is 0.
# ACTIVATE_EXTRUDER EXTRUDER=<config_name>: In a printer with multiple extruders this command is used to change the active extruder.
# SET_PRESSURE_ADVANCE [EXTRUDER=<config_name>] [ADVANCE=<pressure_advance>] [SMOOTH_TIME=<pressure_advance_smooth_time>]: Set pressure advance parameters. If EXTRUDER is not specified, it defaults to the active extruder.
# SET_EXTRUDER_STEP_DISTANCE [EXTRUDER=<config_name>] [DISTANCE=<distance>]: Set a new value for the provided extruder's "step distance". The "step distance" is rotation_distance/(full_steps_per_rotation*microsteps). Value is not retained on Klipper reset. Use with caution, small changes can result in excessive pressure between extruder and hot end. Do proper calibration steps with filament before use. If 'DISTANCE' value is not included command will return current step distance.
# SET_STEPPER_ENABLE STEPPER=<config_name> ENABLE=[0|1]: Enable or disable only the given stepper. This is a diagnostic and debugging tool and must be used with care. Disabling an axis motor does not reset the homing information. Manually moving a disabled stepper may cause the machine to operate the motor outside of safe limits. This can lead to damage to axis components, hot ends, and print surface.
# STEPPER_BUZZ STEPPER=<config_name>: Move the given stepper forward one mm and then backward one mm, repeated 10 times. This is a diagnostic tool to help verify stepper connectivity.
# MANUAL_PROBE [SPEED=<speed>]: Run a helper script useful for measuring the height of the nozzle at a given location. If SPEED is specified, it sets the speed of TESTZ commands (the default is 5mm/s). During a manual probe, the following additional commands are available:
# ACCEPT: This command accepts the current Z position and concludes the manual probing tool.
# ABORT: This command terminates the manual probing tool.
# TESTZ Z=<value>: This command moves the nozzle up or down by the amount specified in "value". For example, TESTZ Z=-.1 would move the nozzle down .1mm while TESTZ Z=.1 would move the nozzle up .1mm. The value may also be +, -, ++, or -- to move the nozzle up or down an amount relative to previous attempts.
# Z_ENDSTOP_CALIBRATE [SPEED=<speed>]: Run a helper script useful for calibrating a Z position_endstop config setting. See the MANUAL_PROBE command for details on the parameters and the additional commands available while the tool is active.
# TUNING_TOWER COMMAND=<command> PARAMETER=<name> START=<value> FACTOR=<value> [BAND=<value>]: A tool for tuning a parameter on each Z height during a print. The tool will run the given COMMAND with the given PARAMETER assigned to the value using the formula value = start + factor * z_height. If BAND is provided then the adjustment will only be made every BAND millimeters of z height - in that case the formula used is value = start + factor * ((floor(z_height / band) + .5) * band).
# SET_DISPLAY_GROUP [DISPLAY=<display>] GROUP=<group>: Set the active display group of an lcd display. This allows to define multiple display data groups in the config, e.g. [display_data <group> <elementname>] and switch between them using this extended gcode command. If DISPLAY is not specified it defaults to "display" (the primary display).
# SET_IDLE_TIMEOUT [TIMEOUT=<timeout>]: Allows the user to set the idle timeout (in seconds).
# RESTART: This will cause the host software to reload its config and perform an internal reset. This command will not clear error state from the micro-controller (see FIRMWARE_RESTART) nor will it load new software (see the FAQ).
# FIRMWARE_RESTART: This is similar to a RESTART command, but it also clears any error state from the micro-controller.
# SAVE_CONFIG: This command will overwrite the main printer config file and restart the host software. This command is used in conjunction with other calibration commands to store the results of calibration tests.
# STATUS: Report the Klipper host software status.
# HELP: Report the list of available extended G-Code commands.

## G-Code Macro Commands
# SET_GCODE_VARIABLE MACRO=<macro_name> VARIABLE=<name> VALUE=<value>: This command allows one to change the value of a gcode_macro variable at run-time. The provided VALUE is parsed as a Python literal.
