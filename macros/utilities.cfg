[respond]
default_type: echo
  #Sets the default prefix of the "M118" and "RESPOND" output to one
  #of the following:
     # echo: "echo: " (This is the default)
     # command: "// "
    #  error: "!! "
default_prefix: echo:
  #Directly sets the default prefix. If present, this value will
 

[gcode_macro CASELIGHT_ON_OFF]
gcode:
    {% if printer["output_pin caselight"].value > 0 %}
        { action_respond_info("Button 'Light' pressed and switched light OFF.") }
        set_pin pin=caselight value=0
    {% else %}
        { action_respond_info("Button 'Light' pressed and switched light ON.") }
        set_pin pin=caselight value=100
    {% endif %}

[gcode_macro _SET_CASELIGHT]
# use SET_CASELIGHT S0.0 to switch off
# use SET_Caselight S1.0 for full brightness
default_parameter_S: 0
gcode:
  SET_PIN PIN=caselight VALUE={S}

[delayed_gcode CLEAR_DISP]
gcode:
    M117
    M117 V2.871 - Ready

[gcode_macro M600]
default_parameter_X: 25                     ;purge buccket location
default_parameter_Y: 350                    ;purge buccket location
default_parameter_Z: 2.5                    ;purge buccket location
gcode:
    SAVE_GCODE_STATE NAME=M600
    PAUSE
    G91
    G1 Z20 F900                             ;Raise Z away from print
    G90
    G1 X{X} Y{Y} F18000                     ;Move to purge bucket
    G1 Z{Z} F18000                          ;Move to purge bucket
    M104 S235                    ;Set Hotend to 260'C
    M109                        ;Wait for hotend temp
    G91
    G1 E-120 F1000                          ;Unload filament
    RESTORE_GCODE_STATE NAME=M600

[gcode_macro LOAD]
gcode:
    SAVE_GCODE_STATE NAME=LOAD
    G91
    G1 E82 F900                              ;Load filament
    clean_nozzle
    RESTORE_GCODE_STATE NAME=LOAD
    SET_IDLE_TIMEOUT TIMEOUT=7200

# [gcode_macro G33]
# gcode:
#     BED_MESH_CLEAR
#     CG28
#     QUAD_GANTRY_LEVEL
#     CG28
#     BED_MESH_CALIBRATE
#     BED_MESH_PROFILE SAVE=HOT
#     SAVE_CONFIG

#[gcode_macro NOZZLECLEAN]
# purge and clean the nozzle in prep for printing 
#gcode:
#    SAVE_GCODE_STATE Name=NOZZLECLEAN
#    G90                          ;absolute positioning
#    G1 X25 Y300 Z10 F5000        ;move to purge bucket location 
#    G1 Z2.5 F5000                ;lower Z
#    G91
#    G1 E10.00 F500               ;purge filament (10mm)
#    G1 E10.00 F800               ;purge filament (10mm)
#    G1 E-0.5 F800                ;retract filament (0.5)
#    G4 P1000
#    G0 X80.00 F3000
#    G0 X-80.00 F3000
#    G0 X80.00 F5000
#    G0 X-80.00 F5000
#    G0 X80.00 F5000              
#    G0 X-80.00 F5000             ;Clean nozzle on brush 
#    G0 Z7.5 F5000                ;Raise Z
#    G1 E0.00 F800                ;prime filament (0.5)
#    RESTORE_GCODE_STATE Name=NOZZLECLEAN
#######################################################################################################################################

# Name of the macro is clean_nozzle.

[gcode_macro clean_nozzle]

# If you are putting your purge bucket at the rear left of the bed as per default installation, enable True on your location_bucket_rear 
# variable. If you want to put your purge bucket elsewhere (perhaps the front), then set it to False. See diagrams and description 
# further below on how to set your XY position.
variable_location_bucket_rear:      True

# If you want the purging routine in your bucket enabled, set to True (and vice versa).
variable_enable_purge:              True

# These parameters define your filament purging. Update as necessary. If you decided to not enable purge, you can ignore this section.
variable_purge_len:            10	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/s, of the purge.
variable_purge_temp_min:      235	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.

# Adjust this so that your nozzle scrubs within the brush. Currently defaulted to be a lot higher for safety. Be careful not to go too low!
variable_brush_top:            8

# These parameters define your scrubbing, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary.
variable_clearance_z:           10	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              2	         ; Number of complete (A complete wipe: start left, go right, go left) wipes.
variable_prep_spd_xy:        3000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        5000	         ; Nozzle wipe speed in mm/min.


# These parameters define the size of the brush. Update as necessary. A visual reference is provided below. Note that orientation of 
# parameters remain the same whether bucket is at rear or front.
# 
#                  ?   brush_width   ?                            
#                   _________________                                                          ?
#                  |                 |  ?                     If you chose location_bucket_rear = True, Y position is acquired
#  brush_start (x) |                 | brush_depth            from your stepper_y position_max. Adjust your brush physically in
#                  |_________________|  ?                               Y so that the nozzle scrubs within the brush.       
#                          (y)                                                                 ?
#                      brush_front
# __________________________________________________________
#                     PRINTER FRONT
# 
# 
## For V1.8, you may need to measure where your brush is on the x axis and input manually into any of the variable_brush_start uncommented.
## For V2.4 250mm build, uncomment this below: 
#variable_brush_start:     25	    

## For V2.4 300mm build, uncomment this below:
#variable_brush_start:     50

## For V2.4 350mm build, uncomment this below:
variable_brush_start:     85

# This value is defaulted from brush location in CAD (rear left). Change if your brush width is different.
variable_brush_width:          30	

## These are only used if location_bucket_rear is False. You specify a custom location in y axis for your brush - see diagram above. ##
variable_brush_front:       0          
variable_brush_depth:       0          


# These parameters define the size of your purge bucket. Update as necessary. If you decided to not enable purge, you can ignore 
# this section. A visual reference is provided below. Note that orientation of parameters remain the same whether bucket is at rear 
# or front.
# 
#                                     bucket_gap
#                                      ? ---- ?
#                     __________________________________________
#                    |                 |      |                 |      
#                    |                 |      |                 |
#  bucket_start (x)  |                 |______|                 |
#                    |                 |      |                 |
#                    |                 |      |                 |
#                    |_________________|. . . |_________________|
#                     ? ------------- ?        ? ------------- ?
#                     bucket_left_width        bucket_right_width
#  _______________________________________________________________________________________
#                                    PRINTER FRONT
# 
## For V2.4 250mm build, uncomment below 
#variable_bucket_left_width:    42

## For V2.4 300mm build, uncomment below
#variable_bucket_left_width:    67

## For V2.4 350mm build, uncomment below
variable_bucket_left_width:    92   

# These values are defaulted from bucket geometry in CAD (rear left location). Change only if you're using a custom bucket.
variable_bucket_right_width:   40            
variable_bucket_gap:           22	

# For V1.8, you may need to measure where your bucket start is and input into bucket_start. Otherwise, a value of 0 is for a default
# installation of purge bucket at rear left.
variable_bucket_start: 0


###############################################################################################################################################
###############################################################################################################################################

### From here on, unless you know what you're doing, it's recommended not to change anything.

###############################################################################################################################################
###############################################################################################################################################

# Placeholder. The variable will contain at random a number representing the left or right bucket.
# Placeholder. The variable will contain at random a number representing the left or right bucket.
variable_bucket_pos:            1	        

gcode:
   # First, check if the axes are homed.
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle

      ## Set to absolute positioning.
      G90

      ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option or not.
      {% if enable_purge %}

         ### Randomly select left or right bin for purge. 
         SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(0, 1) | random)}

         ### Raise Z for travel.
         G1 Z{brush_top + clearance_z} F{prep_spd_z}

         ### Check if user chose to use rear location.
         {% if location_bucket_rear %}
            G1 Y{Ry} F{prep_spd_xy}
         {% else %}
            G1 Y{brush_front + (brush_depth / 2)} F{prep_spd_xy}
         {% endif %}

         ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
         G1 X{bucket_start + (bucket_left_width / 2) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro.
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G92 E0   ; reset extruder
         {% endif %}

      {% endif %}
   
      ## Position for wipe.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start} F{prep_spd_xy}

      ## Check if user chose to use rear location.
      {% if location_bucket_rear %}
         G1 Y{Ry}
      {% else %}
         G1 Y{brush_front + (brush_depth / 2)}
      {% endif %}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + brush_width} F{wipe_spd_xy}
         G1 X{brush_start} F{wipe_spd_xy}
      {% endfor %}
   
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{bucket_left_width / 4} F{prep_spd_xy} 

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle

   {% else %}

      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!

   {% endif %}
   